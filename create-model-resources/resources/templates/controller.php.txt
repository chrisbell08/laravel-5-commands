<?php namespace {%NAMESPACE%}\Controllers;

use App\Http\Controllers\Controller;
use {%NAMESPACE%}\Interfaces\{%INTERFACE%};
use Input, Session, Redirect;

class {%CONTROLLER%} extends Controller {

	/**
	 * [__construct description]
	 * @param [type] $repository [description]
	 */
	public function __construct( {%INTERFACE%} $repository ) {
		$this->repository = $repository;
	}

	/**
	 * [list description]
	 * @return [type] [description]
	 */
	public function lists() {
		$list = $this->repository->paginate(20);
	}

	/**
	 * [showEdit description]
	 * @param  [type] $id [description]
	 * @return [type]     [description]
	 */
	public function showEdit($id) {
		$model = $this->repository->find($id);
	}

	/**
	 * [processEdit description]
	 * @param  [type] $id [description]
	 * @return [type]     [description]
	 */
	public function processEdit($id) {
		$model = $this->repository->find($id);
		if( $errors = $this->repository->failsValidation( Input::all() ) ) {
			Redirect::back()->withInput()->withErrors( $errors );
		}
		$this->repository->update( $model->id, Input::all() );
		$this->respository->success('Successfully update!');
		return Redirect::back();
	}

	/**
	 * [showAdd description]
	 * @return [type] [description]
	 */
	public function showAdd() {

	}

	/**
	 * [processAdd description]
	 * @return [type] [description]
	 */
	public function processAdd() {
		if( $errors = $this->repository->failsValidation( Input::all() ) ) {
			Redirect::back()->withInput()->withErrors( $errors );
		}
		$item = $this->repository->create( Input::all() );
		$this->respository->success('Successfully created!');
		return Redirect::back();
	}

	/**
	 * [delete description]
	 * @param  [type] $id [description]
	 * @return [type]     [description]
	 */
	public function delete($id) {
		$this->repository->find($id)->delete();
		$this->respository->success('Successfully deleted!');
		return Redirect::back();
	}

}